# This config is used primarily for overrides in other config.
# It is handy because then we can focus on this file

# WHAT CAN I PUT HERE?
#
# If you are using the tal variation, then look at metta_mirantis/config/variations/tal
# at the variables file there, and how variables:X are injected into the other config
# files there.
# Note also that values in metta may tell metta to load more variables data from
# other folders in metta_mirantis/config. You can still override those values here

# Used in terraform resource tagging (user:id gets set in conftest.py)
user: "{{user:id?anon}}"
#  arbitrary yet unique string which represents the deployment, eg, 'refactor', 'unicorn', 'stresstest'.
task: "npods"
# One of the official cost-tracking project names. Without this, your cluster may get terminated without warning.
project: "TAR-TLNG-ATMTN"

# A generic project/user id that we reuse across the configuration
id: "{{user:id}}-{{task}}"

# where the tal variation should keep runtime paths like terraform state
files_path: "{{paths:project}}/.metta"

# Tag any resources with the suite name and metta presets
extra_tags:
  metta.suite: "{{task}}"
  metta.mirantis.preset.variation: "{{mirantis:presets.variation}}"
  metta.mirantis.preset.cluster: "custom"
  metta.mirantis.preset.release: "custom"
  metta.mirantis.preset.platform: "{{mirantis:presets.platform}}"

# Open up network access from my machine
open_sg_for_myip: True

# Let's manually define our cluster for this test
manager_count: 3
manager_type: m5.2xlarge
manager_volume_size: 100
worker_count: 5
worker_type: m5.2xlarge
worker_volume_size: 100
windows_worker_count: 0

# Override some component versions
mcr_repo_url: "https://repos.mirantis.com/"
mcr_channel: stable
mcr_version: 20.10.5
mke_image_repo: docker.io/mirantis
mke_version: 3.4.2

# No need for MSR on this one
msr_count: 0
