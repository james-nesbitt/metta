# MKE Environments for testing CNCF conformance.
#
# Here we create an environment per testing scenario, which comes down to an
# MKE version, with the relevant MCR version for install, and then the K8S
# version to test against.
#
# @NOTE we initially created an environment per version to test against
# with each environment using a subfolder for MKE/MCR and Kubernetes
# version pinning, but we dropped it because it was getting too slow.
#

# Create environment 3_4_2 for version '3.4.2'
cncf:
  bootstraps:
    metta:
    - metta_common
    - metta_docker
    - metta_kubernetes
    - metta_terraform
    - metta_ansible
    - metta_launchpad
    - metta_common_config
    - metta_mirantis_common
    - metta_mirantis_presets
    - metta_sonobuoy

  config:
    sources:
      cncf-mke-344:
        # Include the config/mke_3.4.4 path as a config source for this environment
        plugin_id: path
        priority: 80
        path: "{{paths:project-config}}/mke_3.4.4"

      # include Environemnt variables as a source of config if they use the format
      # METTA_LABEL[_STEP]*
      # config.get(mylabel).get(one.two.three) would be METTA_MYLABEL_ONE_TWO_THREE
      metta-env:
        plugin_id: env-specific
        priority: 90
        base: "METTA"
      # Also allow an env variable containing json to be used as a dictionary of
      # config source.  There is some chance of collision with the previous plugin
      metta-env-json:
        plugin_id: env-json
        priority: 85
        env: METTA_CONFIGJSON

  fixtures:
    from_config:
      # Load the fixtures from fixtures(.yml) source.
      label: fixtures
