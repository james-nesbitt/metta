apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ template "rethinkdb.fullname" . }}-cluster"
  labels:
    app: "{{ template "rethinkdb.name" . }}-cluster"
    chart: {{ template "rethinkdb.chart" . }}
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
spec:
  serviceName: "{{ template "rethinkdb.fullname" . }}-cluster"
  replicas: {{ .Values.cluster.replicas }}
  selector:
    matchLabels:
      app: "{{ template "rethinkdb.name" . }}-cluster"
      heritage: {{ .Release.Service | quote }}
      release: {{ .Release.Name | quote }}
      chart: {{ template "rethinkdb.chart" . }}
  template:
    metadata:
      name: "{{ template "rethinkdb.fullname" . }}-cluster"
      labels:
        app: "{{ template "rethinkdb.name" . }}-cluster"
        heritage: {{ .Release.Service | quote }}
        release: {{ .Release.Name | quote }}
        chart: {{ template "rethinkdb.chart" . }}
      annotations:
      {{- if .Values.cluster.podAnnotations }}
{{ toYaml .Values.cluster.podAnnotations | indent 8 }}
      {{- end }}
    spec:
      serviceAccountName: {{ template "rethinkdb.serviceAccountName" . }}
      {{- if .Values.image.pullSecret }}
      imagePullSecrets:
        - name: {{ .Values.image.pullSecret }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ template "rethinkdb.name" . }}-cluster
          image: "{{ include "rethinkdb.imageRef" . }}"
          imagePullPolicy: "{{ .Values.image.pullPolicy }}"
          ports:
            - name: cluster
              containerPort: {{ .Values.ports.cluster }}
          command: ["/rethinkdb-k8s-entrypoint.sh"]
          args:
            - "--directory"
            - "/data/db"
            - "--bind-cluster"
            - "all"
            # While the driver port isn't exposed externally, the liveness probe
            # makes use of it and so it must be set appropriately here.
            - "--driver-port"
            - "{{ .Values.ports.driver }}"
            - "--cluster-port"
            - "{{ .Values.ports.cluster }}"
            - "--no-http-admin"
            - "--cache-size"
            - {{ .Values.cluster.rethinkCacheSize | quote }}
            {{- if .Values.cluster.clusterTLS.enabled }}
            - "--cluster-tls-key"
            - "/secrets/cluster-key.pem"
            - "--cluster-tls-cert"
            - "/secrets/cluster-cert.pem"
            - "--cluster-tls-ca"
            - "/secrets/cluster-ca.pem"
            {{- end }}
          volumeMounts:
            - name: "datadir"
              mountPath: "/data"
            {{- if .Values.cluster.clusterTLS.enabled }}
            - name: "secrets"
              mountPath: "/secrets"
            {{- end }}
          env:
            - name: RETHINK_CLUSTER_SERVICE
              value: "{{ template "rethinkdb.fullname" . }}-cluster"
            - name: RETHINKDB_URL
              value: "localhost:{{ .Values.ports.driver }}"
            - name: RETHINKDB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "rethinkdb.fullname" . }}-admin-creds
                  key: password
                  optional: true
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          {{- if .Values.cluster.livenessProbe }}
          livenessProbe:
{{ toYaml .Values.cluster.livenessProbe | indent 12 }}
          {{- end }}
          {{- if .Values.cluster.readinessProbe }}
          readinessProbe:
{{ toYaml .Values.cluster.readinessProbe | indent 12 }}
          {{- end }}
          resources:
{{ toYaml .Values.cluster.resources | indent 12 }}
      volumes:
        {{- if not .Values.cluster.persistentVolume.enabled }}
        - name: datadir
          emptyDir: {}
        {{- end }}
        {{- if .Values.cluster.clusterTLS.enabled }}
        - name: secrets
          projected:
            sources:
            - secret:
                name: {{ template "rethinkdb.clusterTLSSecretName" . }}
                items:
                - key: tls.key
                  path: cluster-key.pem
                - key: tls.crt
                  path: cluster-cert.pem
                - key: ca.crt
                  path: cluster-ca.pem
        {{- end }}
  {{- if .Values.cluster.persistentVolume.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: datadir
      annotations:
      {{- range $key, $value := .Values.cluster.persistentVolume.annotations }}
        {{ $key }}: {{ $value }}
      {{- end }}
    spec:
      accessModes:
      {{- range .Values.cluster.persistentVolume.accessModes }}
        - {{ . | quote }}
      {{- end }}
      {{- if .Values.cluster.persistentVolume.storageClass }}
      {{- if (eq "-" .Values.cluster.persistentVolume.storageClass) }}
      storageClassName: ""
      {{- else }}
      storageClassName: "{{ .Values.cluster.persistentVolume.storageClass }}"
      {{- end }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.cluster.persistentVolume.size | quote }}
  {{- end }}
