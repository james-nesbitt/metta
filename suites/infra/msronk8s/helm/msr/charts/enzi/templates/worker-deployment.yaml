apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "enzi.fullname" . }}-worker
  labels:
    {{- include "enzi.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.workerReplicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "enzi.workerSelectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "enzi.workerSelectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "enzi.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ include "enzi.imageRef" . }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - "--debug"
            - "--tls-dir=/secrets/tls"
            - "--db-addr={{ tpl .Values.dbAddr . }}:{{ .Values.dbPort }}"
            - "worker"
            - "--addr=$(POD_IP)"
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
          volumeMounts:
            - name: "secrets"
              mountPath: "/secrets"
          # We've chosen to forgo health probes on the worker containers because:
          # - the workers enforce mTLS which would require configuring a TLS cert
          # - enzi handles its own service discovery already so this is less useful
          #livenessProbe:
          #readinessProbe:
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: secrets
          projected:
            sources:
            - secret:
                name: {{ tpl .Values.tlsCertSecret . }}
                items:
                - key: tls.key
                  path: tls/key.pem
                - key: tls.crt
                  path: tls/cert.pem
            - secret:
                name: {{ tpl .Values.tlsCABundleSecret . }}
                items:
                - key: tls.crt
                  path: tls/ca.pem
