# Default values for msr.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""
fullnameOverride: ""

imagePullSecrets: []
nodeSelector: {}
serviceAccountName: "default"
automountServiceAccountToken: true

# The "global" value is a special value in Helm that is accessible in the main
# chart as well as all subcharts.  Combining this with use of the "tpl" function
# in the subcharts allows us to pass values down to the subcharts without
# strongly coupling the implementations to the parent chart.
global:
  # Default repo namespace to use when fetching container images.  Individual
  # components may override this value in their respective "image" configurations.
  namespace:  # probably "mirantis" for production

  # Default image tag to use when fetching container images.  Individual
  # components may override this value in their respective "image" configurations.
  tag: latest  # probably "X.Y.Z" for production

service:
  servicename:
  type: ClusterIP
  externalTrafficPolicy: Local
  ## Limits which cidr blocks can connect to service's load balancer
  ## Only valid if service.type: LoadBalancer
  loadBalancerSourceRanges: []
  # clusterIP: None
  externalHTTPPort: 8080
  externalHTTPSPort: 443
  annotations: {}
  labels: {}

rethinkdb:  # values passed to rethinkdb subchart
  image:
    #repository:  # set this to override the subchart default
    #namespace: "" # set this to override the subchart default
    tag: 2.3.6-mirantis-4-c54c6f8
    #pullPolicy:  # set this to override the subchart default
    #pullSecret:
  rethinkdbPassword: ""
  cluster:
    replicas: 1
    persistentVolume:
      enabled: false
    clusterTLS:
      enabled: true
      secretName: "{{ .Release.Name }}-rethinkdb-cluster-cert-0"
  proxy:
    driverTLS:
      enabled: true
      secretName: "{{ .Release.Name }}-rethinkdb-driver-cert"
      mutual:
        secretName: "{{ .Release.Name }}-rethinkdb-driver-client-ca-cert"

enzi:  # values passed to enzi subchart
  image:
    #repository:  # set this to override the subchart default
    #namespace: "" # set this to override the subchart default
    #tag: "" # set this to override the subchart default
    #pullPolicy:  # set this to override the subchart default
  # imagePullSecrets:
  #   - name:
  apiReplicaCount: 1
  workerReplicaCount: 1
  tlsCertSecret: "{{ .Release.Name }}-rethinkdb-driver-client-cert-0"
  tlsCABundleSecret: "{{ .Release.Name }}-rethinkdb-driver-ca-cert"
  dbAddr: "{{ .Release.Name }}-rethinkdb-proxy"
  dbPort: 28015

nginx:
  image:
    repository: dtr-nginx
    namespace: "{{ .Values.global.namespace }}"
    tag: "{{ .Values.global.tag }}"
    pullPolicy: IfNotPresent
  replicaCount: 1
  tlsCertSecret: "{{ .Release.Name }}-nginx-cert-0"

garant:
  image:
    repository: dtr-garant
    namespace: "{{ .Values.global.namespace }}"
    tag: "{{ .Values.global.tag }}"
    pullPolicy: IfNotPresent
  replicaCount: 1

api:
  image:
    repository: dtr-api
    namespace: "{{ .Values.global.namespace }}"
    tag: "{{ .Values.global.tag }}"
    pullPolicy: IfNotPresent
  replicaCount: 1

jobrunner:
  image:
    repository: dtr-jobrunner
    namespace: "{{ .Values.global.namespace }}"
    tag: "{{ .Values.global.tag }}"
    pullPolicy: IfNotPresent
  ## Jobrunner can be deployed multiple times with different configurations.
  ## Each deployment needs a unique name.
  deployments:
    default:
      replicaCount: 1
      ## nodeSelector sets node selection constraints for the jobrunner
      ## workers in this deployment.
      ## See https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#nodeselector
      # nodeSelector:
      #   mynodelabel: somevalue
      ## affinity sets node affinity and anti-affinity constraints for the
      ## jobrunner workers in this deployment.
      ## See https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity
      # affinity: {}
      ## customCapacity enables the capacityMap configuration for this deployment.
      customCapacity: false
      ## capacityMap configures the job capacity, setting the limit for the
      ## number of jobs of a given type which can execute concurrently on each
      ## jobrunner worker in the deployment. Setting the capacity for a job type
      ## to zero blocks any jobs of that type from running on the jobrunner
      ## workers.
      ##
      ## Note that only certain types of jobs can be limited.
      capacityMap:
        mirror: 1
        scanCheck: 1
        scan: 1
    # mirrormirror-example:
    #   replicaCount: 1
    #   customCapacity: true
    #   capacityMap:
    #     mirror: 3
    #     scanCheck: 0
    #     scan: 0
    # dedicated-scan-example:
    #   replicaCount: 3
    #   customCapacity: true
    #   capacityMap:
    #     mirror: 0
    #     scan: 3
    #     scanCheck: 3

initializeJob:
  image:
    repository: dtr-api
    namespace: "{{ .Values.global.namespace }}"
    tag: "{{ .Values.global.tag }}"
    pullPolicy: IfNotPresent

notarySigner:
  image:
    repository: dtr-notary-signer
    namespace: "{{ .Values.global.namespace }}"
    tag: "{{ .Values.global.tag }}"
    pullPolicy: IfNotPresent
  replicaCount: 1

notaryServer:
  image:
    repository: dtr-notary-server
    namespace: "{{ .Values.global.namespace }}"
    tag: "{{ .Values.global.tag }}"
    pullPolicy: IfNotPresent
  replicaCount: 1

registry:
  image:
    repository: dtr-registry
    namespace: "{{ .Values.global.namespace }}"
    tag: "{{ .Values.global.tag }}"
    pullPolicy: IfNotPresent
  replicaCount: 1
  storage:
    ## backend is the storage backend to use for image storage.
    ## Choose from "persistentVolume", "azure", "gcs", "s3", "swift" or "oss".
    ##
    backend: "persistentVolume"

    ## persistentVolume is configuration for the persistentVolume storage
    ##   backend, used when storing images on persistent volumes such as local
    ##   disks or NFS shares.
    ##
    persistentVolume:
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning.
      ## If undefined (the default) or set to null, no storageClassName spec is
      ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
      ##   GKE, AWS & OpenStack)
      ##
      storageClass: ""
      accessMode: ReadWriteMany
      size: 10Gi
      ## existingClaim specifies the name of an existing PersistentVolumeClaim
      ##   to use for storage.
      ## If defined and non-empty, the specified PersistentVolumeClaim is used
      ##   and the above parameter values are ignored.
      # existingClaim: ""

    ## azure is configuration for the azure storage backend, used when storing
    ##   images in Microsoft Azure Blob Storage.
    ##
    azure:
      ## accountname is the name of the Azure Storage Account.
      accountname: ""
      ## accountkey is the Primary or Secondary Key for the Storage Account.
      accountkey: ""
      ## container is the name of the Azure root storage container in which
      ##   image data is stored.
      ## Must comply with the storage container name requirements.
      ##   https://docs.microsoft.com/rest/api/storageservices/fileservices/naming-and-referencing-containers--blobs--and-metadata
      ##   For example, if your url is https://myaccount.blob.core.windows.net/myblob
      ##   use the container value of "myblob".
      ##
      container: ""
      ## realm is the domain name suffix for the Storage API endpoint.
      ## For example realm for "Azure in China" would be
      ##   "core.chinacloudapi.cn" and realm for "Azure Government" would be
      ##   "core.usgovcloudapi.net".
      ## If undefined (the default), no realm is set, choosing the default
      ##   "core.windows.net".
      ##
      # realm: ""

    ## gcs is configuration for the gcs storage backend, used when storing
    ##   images in Google Cloud Storage.
    ##
    gcs:
      ## bucket is the name of the Google Cloud Storage bucket in which image
      ##   data is stored.
      ## The bucket must already exist.
      ##
      bucket: ""
      ## credentials is the contents of a service account private key file in
      ##   JSON format used for Service Account Authentication.
      ## If undefined (the default), the default service account credentials
      ##   are retrieved from the Google Cloud environment the application is
      ##   deployed into.
      ##
      # credentials: ""
      ## rootdirectory is the root directory tree in which all registry files
      ##   are stored. The prefix is applied to all Google Cloud Storage keys
      ##   to allow you to segment data in your bucket if necessary.
      ## If undefined (the default), the bucket root is used.
      ## If set to a non-empty string, the path "bucketname/<prefix>" must be
      ##   pre-created before starting the registry.
      ##
      # rootdirectory: ""
      ## chunksize is the chunk size used for uploading large blobs. It must be
      ##   a multiple of 262144 (256*1024).
      ## If undefined (the default), the default value of 5242880 is used.
      ##
      # chunksize: 5242880

    ## s3 is configuration for the s3 storage backend, used when storing images
    ##   in Amazon S3 or S3-compatible services for object storage.
    s3:
      ## accesskey is your AWS Access Key.
      ## If you use IAM roles, leave the value undefined (the default) to fetch
      ##   temporary credentials from IAM.
      ##
      # accesskey: ""
      ## secretkey is your AWS Secret key.
      ## If you use IAM roles, leave the value undefined (the default) to fetch
      ##   temporary credentials from IAM.
      ##
      # secretkey: ""
      ## region is the AWS region in which your bucket exists.
      region: ""
      ## regionendpoint is the endpoint for S3 compatible storage services
      ##   (Minio, etc.)
      ## This should not be provided when using Amazon S3.
      ##
      # regionendpoint: ""
      ## bucket is the name of the bucket in which image data is stored.
      ## The bucket must already exist.
      ##
      bucket: ""
      ## encrypt specifies whether images are stored in encrypted format.
      ## The default is false.
      ##
      # encrypt: false
      ## keyid is the KMS key ID to use for encryption of images.
      ## This value is ignored when encrypt is false.
      ## The default is "none".
      ##
      # keyid: "none"
      ## secure specifies whether to use HTTPS for data transfers to the
      ##   bucket. While setting this to false improves performance, it is not
      ##   recommended due to security concerns.
      ## The default is true.
      ##
      # secure: true
      ## v4auth specifies whether to use AWS Signature Version 4 to
      ##   authenticate requests.
      ## The default is true.
      ##
      # v4auth: true
      ## chunksize is the default part size for multipart uploads. It must be
      ##   set to a number that is at least 5242880 (5 MiB, 5*1024*1024).
      ## Depending on the speed of your connection to S3, a larger chunk size
      ##   may result in better performance; faster connections benefit from
      ##   larger chunk sizes.
      ## The default is 10 MiB.
      ##
      # chunksize: 10485760
      ## rootdirectory is a prefix that is applied to all object keys to allow
      ##   you to segment data in your bucket if necessary.
      ##
      # rootdirectory: ""
      ## storageclass is the S3 storage class applied to each registry file.
      ## Valid options are "STANDARD" and "REDUCED_REDUNDANCY".
      ## The default is "STANDARD".
      # storageclass: "STANDARD"

    ## swift is configuration for the swift storage backend, used when storing
    ##   images in OpenStack Swift object storage.
    swift:
      ## authurl is the URL for obtaining an auth token:
      ##   https://storage.myprovider.com/v2.0 or
      ##   https://storage.myprovider.com/v3/auth
      ##
      authurl: ""
      ## username is your OpenStack user name.
      username: ""
      ## password is your OpenStack password.
      password: ""
      ## region is the OpenStack region in which your container exists.
      # region: ""
      ## container is the name of your Swift container where you wish to store
      ##   the registry images. The named container is created if needed.
      container: ""
      ## tenant is your OpenStack tenant name.
      # tenant: ""
      ## tenantid is your OpenStack tenant id.
      # tenantid: ""
      ## domain is your OpenStack domain name for Identity v3 API.
      # domain: ""
      ## domainid is your OpenStack domain id for Identity v3 API.
      # domainid: ""
      ## trustid is your OpenStack trust ID for Identity v3 API.
      # trustid: ""
      ## insecureskipverify skips TLS server certificate verification when set
      ##   to true.
      ## The default is false.
      ##
      # insecureskipverify: false
      ## chunksize is the size of data segments for the Swift Dynamic Large
      ##   Objects. It must be at least 1048576 (1 MiB).
      ## The default is 20 MiB.
      ##
      # chunksize: 20971520
      ## prefix is a prefix that is applied to all Swift object keys to allow
      ##   you to segment data in your container if necessary.
      ## The default is the empty string which is the container's root.
      ##
      # prefix: ""
      ## secretkey is the secret key used to generate temporary URLs.
      # secretkey: ""
      ## accesskey is the access key to generate temporary URLs. It is used by
      ##   HP Cloud Object Storage in addition to the secretkey parameter.
      ##
      # accesskey: ""
      ## authversion specifies the OpenStack Auth version.
      ## If not set, the auth version is autodetected from the authurl.
      ##
      # authversion: 3
      ## endpointtype is the endpoint type used when connecting to Swift.
      ## Possible values are "public", "internal" or "admin".
      ## The default is "public".
      # endpointtype: "public"

    ## oss is configuration for the oss storage backend, used when storing
    ##   images in Aliyun OSS object storage.
    oss:
      ## accesskeyid is your access key ID.
      accesskeyid: ""
      ## accesskeysecret is your access key secret.
      accesskeysecret: ""
      ## region is the ID of the OSS region in which you would like to store
      ##   objects. See https://www.alibabacloud.com/help/doc-detail/31837.html
      ##   for the list of regions and their corresponding IDs.
      region: "oss-cn-beijing"
      ## endpoint is the endpoint domain name for accessing OSS.
      ## If not set, it defaults to [bucket].[region].aliyuncs.com, or to
      ##   [bucket].[region]-internal.aliyuncs.com when internal=true.
      ##
      # endpoint: ""
      ## internal specifies whether to use the internal endpoint instead of the
      ##   public endpoint for OSS access.
      ## The default is false.
      ##
      # internal: false
      ## bucket is the name of the OSS bucket where you wish to store objects.
      ## The bucket must already exist.
      ##
      bucket: ""
      ## encrypt specifies whether you would like your data encrypted on the
      ##   server side.
      ## The default is false.
      ##
      # encrypt: false
      ## secure specifies whether to transfer data to the bucket over HTTPS.
      ## The default is true.
      ##
      # secure: true
      ## chunksize is the default part size for multipart uploads. It must be
      ##   set to a number that is at least 5242880 (5 MiB, 5*1024*1024).
      ## Depending on the speed of your connection to OSS, a larger chunk size
      ##   may result in better performance; faster connections benefit from
      ##   larger chunk sizes.
      ## The default is 10 MiB.
      ##
      # chunksize: 10485760
      ## rootdirectory is a prefix that is applied to all object keys to allow
      ##   you to segment data in your bucket if necessary.
      ##
      # rootdirectory: ""

postgresql:
  nameOverride: scanningstore
  postgresqlPassword: postgres
  postgresqlDatabase: fuzzomatic
  initdbScripts:
    fuzzomatic.sql: |
      CREATE USER fuzzomatic WITH SUPERUSER;
  volumePermissions:
    enabled: true
  tls:
    enabled: true
    certificatesSecret: msr-scanningstore-server-cert # Not evaluated as a template :(
    certFilename: tls.crt
    certKeyFilename: tls.key
    certCAFilename: ca.crt
  persistence:
    size: 16Gi
