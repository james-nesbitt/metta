{{- range $name, $deploy := .Values.jobrunner.deployments }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "msr.fullname" $ }}-jobrunner-{{ $name }}
  labels:
    {{- include "msr.labels" $ | nindent 4 }}
    app.kubernetes.io/component: jobrunner
    msr.mirantis.com/deployment: "{{ $name }}"
spec:
  replicas: {{ $deploy.replicaCount }}
  selector:
    matchLabels:
      {{- include "msr.commonSelectorLabels" $ | nindent 6 }}
      app.kubernetes.io/component: jobrunner
      msr.mirantis.com/deployment: "{{ $name }}"
  template:
    metadata:
      labels:
        {{- include "msr.labels" $ | nindent 8 }}
        app.kubernetes.io/component: jobrunner
        msr.mirantis.com/deployment: "{{ $name }}"
    spec:
      {{- with $.Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ $.Values.serviceAccountName }}
      automountServiceAccountToken: {{ $.Values.automountServiceAccountToken }}
      {{- if $deploy.nodeSelector }}
      nodeSelector:
        {{- toYaml $deploy.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if $deploy.affinity }}
      affinity:
        {{- toYaml $deploy.affinity | nindent 8 }}
      {{- end }}
      containers:
        - name: jobrunner
          securityContext: {}
          image: "{{ include "msr.imageRef" (list $ "jobrunner") }}"
          imagePullPolicy: {{ $.Values.jobrunner.image.pullPolicy }}
          env:
            - name: MSR_JOBRUNNER_WORKER_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MSR_RETHINKDB_ADDR
              value: "{{ $.Release.Name }}-rethinkdb-proxy:{{ $.Values.rethinkdb.ports.driver }}"
            - name: MSR_RETHINKDB_CLIENT_CERT_FILE
              value: /certs/rethinkdb-client/tls.crt
            - name: MSR_RETHINKDB_CLIENT_KEY_FILE
              value: /certs/rethinkdb-client/tls.key
            - name: MSR_RETHINKDB_CA_CERT_FILE
              value: /certs/rethinkdb/ca.crt
            - name: MSR_ENZI_CLIENT_CERT_FILE
              value: /certs/enziservice-client/tls.crt
            - name: MSR_ENZI_CLIENT_KEY_FILE
              value: /certs/enziservice-client/tls.key
            - name: MSR_PG_HOST
              value: {{ include "msr.scanningstore.svc" $ }}
            {{- if $deploy.customCapacity }}
            - name: MSR_JOBRUNNER_WORKER_CAPACITY_MAP_FILE
              value: /etc/jobrunner/capacity.json
            {{- end }}
          volumeMounts:
            - name: config
              mountPath: /etc/dtr
            - name: certs
              mountPath: /certs
            - name: scanningstore-certs
              mountPath: /config
          {{- if eq $.Values.registry.storage.backend "persistentVolume" }}
            - name: storage
              mountPath: /storage
          {{- end }}
          {{- if $deploy.customCapacity  }}
            - name: capacitymap
              mountPath: /etc/jobrunner
          {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "msr.fullname" $ }}-registry-config
            {{- /*
              Unlike the registry deployment, there is no need to trigger
              a rolling restart of jobrunner when the registry config changes
              as the config is loaded from disk by the ephemeral job executor
              processes. Any config changes will get picked up by the next job.
            */}}
        - name: certs
          projected:
            sources:
              - secret:
                  name: "{{ include "msr.fullname" $ }}-rethinkdb-driver-client-cert-0"
                  items:
                    - key: tls.key
                      path: rethinkdb-client/tls.key
                    - key: tls.crt
                      path: rethinkdb-client/tls.crt
              - secret:
                  name: "{{ include "msr.fullname" $ }}-rethinkdb-driver-ca-cert"
                  items:
                    - key: ca.crt
                      path: rethinkdb/ca.crt
              - secret:
                  name: {{ include "msr.fullname" $ }}-enzi-client-cert
                  items:
                    - key: tls.crt
                      path: enziservice-client/tls.crt
                    - key: tls.key
                      path: enziservice-client/tls.key
        - name: scanningstore-certs
          projected:
            sources:
              {{- include "msr.scanningstore.clienttls.volumeProjection" $ | nindent 14 }}
        {{- if eq $.Values.registry.storage.backend "persistentVolume" }}
        - name: storage
          persistentVolumeClaim:
            claimName: {{ $.Values.registry.storage.persistentVolume.existingClaim | default (include "msr.fullname" $) }}
        {{- end }}
        {{- if $deploy.customCapacity }}
        - name: capacitymap
          configMap:
            name: {{ include "msr.fullname" $ }}-jobrunner-{{ $name }}-capacity
        {{- end }}
{{- end }}
