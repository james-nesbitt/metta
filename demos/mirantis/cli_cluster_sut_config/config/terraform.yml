# not actually used, but shows a way to assemble a large id
id: "{user:id}-{global:project}-{vars.task_name}-{global:cluster}-{global:sut}"
# put the cluster name up here and use it in multiple places below
cluster_name: "oc-cluster"

# we are going to put all runtime files in this project path
files_path: "{path:project}"

state:
    # wheter the state file will be written
    path: "{files_path}/terraform/{cluster_name}.terraform.state"

# Where will the vars be written
vars_path: "{files_path}/terraform/{cluster_name}.tfvars.json"

plan:
    # mtt_mirantis has config to give us a path to a plan
    path: "{mtt_mirantis:terraform.plans.prodeng.aws}"
options:
    always_init: false
vars:
    # pull this value from earlier in the file
    cluster_name: "{cluster_name}"
    admin_password: "abcd1234changeme"
    windows_administrator_password: "tfaws,,CHANGEME..Example"
    platform: "rhel_7.8"
    # This is programmatically entered in conftest.py
    username: "{user:id?user}"
    # These two are pulled from global.yml
    task_name: "{global:id}"
    project: "{global:project}"
    expire_duration: "72h"
    kube_orchestration: true
    msr_install_flags: ["--ucp-insecure-tls"]
    platform_repo: "public"
    # These values get overridden in other config files
    manager_count: 1
    worker_count: 3
    msr_count: 0
    windows_worker_count: 0
    engine_version: "19.03.12"
    mke_version: "3.3.3"
    msr_version: "2.8.3"
